cost_parameters:
  back_added_cost:
    search_space: "hp.quniform('back_added_cost', -10.0, 0.0, 2.5)"
    prior: "lambda val : np.log(1/5)"
  depth_cost_weight:
    search_space: "hp.quniform('depth_cost_weight', -5.0, 10.0, 2.5)"
    prior: "lambda val : np.log(1/7)"
  distance_multiplier:
    search_space: "hp.quniform('distance_multiplier', 0.0, 10.0, 2.5)"
    prior: "lambda val : np.log(1/5)"
  forw_added_cost:
    search_space: "hp.quniform('forw_added_cost', -10.0, 0.0, 2.5)"
    prior: "lambda val : np.log(1/5)"
  given_cost:
    search_space: "hp.quniform('given_cost',-5.0, 10.0, 2.5)"
    prior: "lambda val :  np.log(1/7)"
policy_parameters:
  kappa:
    search_space: "hp.quniform('kappa', 0, 1, 0.2)"
    prior: "lambda val : np.log(1/6)"
  gamma:
    search_space: "hp.quniform('gamma', 0, 1, 0.2)"
    prior: "lambda val : np.log(1/6)"
  temp:
    search_space: "hp.choice('temp', [0.1, 1, 10, 100])"
