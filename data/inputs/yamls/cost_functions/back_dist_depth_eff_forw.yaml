cost_function: "lambda back_added_cost, depth_cost_weight, distance_multiplier, forw_added_cost, given_cost : lambda state, action, graph: linear_depth(depth_cost_weight=depth_cost_weight, static_cost_weight=0)(state, action, graph=graph) + forward_search_cost(inspection_cost=0, added_cost=forw_added_cost, include_start=1.00)(state, action, graph=graph) + backward_search_cost(inspection_cost=0, added_cost=back_added_cost, include_start=1.00)(state, action, graph=graph) + distance_graph_cost(given_cost=given_cost, distance_multiplier=distance_multiplier)(state, action, graph=graph)"
cost_parameter_args:
        - back_added_cost
        - depth_cost_weight
        - distance_multiplier
        - forw_added_cost
        - given_cost
cost_parameter_names:
        - Backward Added Cost
        - Cost of Prospection
        - Distance Cost
        - Forward Added Cost
        - Effort Cost
env_params: {'include_last_action': true, 'last_action_info' : 'distance'}
constant_values: {'forw_added_cost': 0, 'back_added_cost': 0,  'given_cost': 1, 'distance_multiplier': 0, 'depth_cost_weight': 0}
model_name: "{() : 'All five', ('back_added_cost', 'depth_cost_weight', 'distance_multiplier', 'forw_added_cost, 'given_cost') : 'Null (Given Costs)', ('depth_cost_weight', 'distance_multiplier', 'forw_added_cost, 'given_cost') : 'Backward Search Bonus Only', ('back_added_cost', 'distance_multiplier', 'forw_added_cost, 'given_cost') : 'Planning Depth Only', ('back_added_cost', 'depth_cost_weight', 'forw_added_cost, 'given_cost') : 'Distance Cost Only', ('back_added_cost', 'depth_cost_weight', 'distance_multiplier', 'given_cost') : 'Forward Search Bonus Only', ('back_added_cost', 'depth_cost_weight', 'distance_multiplier', 'forw_added_cost') : 'Effort Cost Only', ('back_added_cost', 'depth_cost_weight', 'distance_multiplier',) : 'Effort and Forward Search Bonus', ('back_added_cost', 'depth_cost_weight', 'forw_added_cost') : 'Distance and Effort Costs', ('back_added_cost', 'depth_cost_weight', 'given_cost') :  'Distance and Forward Search Bonus', ('back_added_cost', 'distance_multiplier', 'forw_added_cost') : 'Effort Cost and Planning Depth', ('back_added_cost', 'distance_multiplier', 'given_cost') : 'Depth and Forward Search Bonus', ('back_added_cost', 'forw_added_cost, 'given_cost') : 'Distance and Depth Costs', ('depth_cost_weight', 'distance_multiplier', 'forw_added_cost') : 'Backward Search Bonus and Effort Cost', ('depth_cost_weight', 'distance_multiplier', 'given_cost') : 'Backward and Forward Search Bonus', ('depth_cost_weight', 'forw_added_cost, 'given_cost') :  'Distance and Backward Search Bonus', ('distance_multiplier', 'forw_added_cost, 'given_cost') :  'Depth and Backward Search Bonus', ('back_added_cost', 'depth_cost_weight'): 'Distance, Effort and Forward Search Bonus', ('back_added_cost', 'distance_multiplier') : 'Effort, Depth and Forward Search Bonus', ('back_added_cost', 'forw_added_cost') : 'Distance, Depth and Effort Costs', ('back_added_cost', 'given_cost') : 'Distance, Depth and Forward Search Bonus', ('depth_cost_weight', 'distance_multiplier') : 'Effort, Backward and Forward Search Bonus', ('depth_cost_weight', 'forw_added_cost') : 'Distance and Effort Costs and Backward Search Bonus', ('depth_cost_weight', 'given_cost') : 'Distance, Backward and Forward Search Bonus', ('distance_multiplier', 'forw_added_cost') :  'Depth and Effort Costs and Backward Search Bonus', ('distance_multiplier', 'given_cost') :  'Depth, Backward and Forward Search Bonus', ('forw_added_cost, 'given_cost') : 'Distance, Depth and Backward Search Bonus', ('back_added_cost',) : 'Distance, Effort, Depth and Forward Search Bonus', ('depth_cost_weight',) :  'Distance, Effort, Backward and Forward Search Bonus', ('distance_multiplier',) : 'Effort, Depth, Backward and Forward Search Bonus', ('forw_added_cost,) : 'Distance, Depth and Effort Costs and Backward Search Bonus', ('given_cost',) : 'Distance, Depth, Backward and Forward Search Bonus'}"
